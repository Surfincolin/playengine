module.exports = RecurringOrderWithContact = require('typedef')

// THIS CODE WAS GENERATED BY AN AUTOMATED TOOL. Editing it is not recommended.
// For more information, see http://github.com/bvalosek/grunt-infusionsoft
// Generated on Wed Jan 08 2014 12:43:55 GMT-0600 (CST)

// This is a mirror image of the RecurringOrder table, but Contact data has been
// virtually included here to save you an API call. Custom contact fields are not
// retrievable via the table.
.class('RecurringOrderWithContact') .define({

    __static__field__number__read__RecurringOrderId:
        'RecurringOrderId',

    __static__field__number__read__ContactId:
        'ContactId',

    __static__field__number__read__ProgramId:
        'ProgramId',

    __static__field__number__read__SubscriptionPlanId:
        'SubscriptionPlanId',

    __static__field__number__read__ProductId:
        'ProductId',

    __static__field__datetime__read__StartDate:
        'StartDate',

    __static__field__datetime__read__EndDate:
        'EndDate',

    __static__field__datetime__read__LastBillDate:
        'LastBillDate',

    __static__field__datetime__read__NextBillDate:
        'NextBillDate',

    __static__field__datetime__read__PaidThruDate:
        'PaidThruDate',

    __static__field__string__read__BillingCycle:
        'BillingCycle',

    __static__field__number__read__Frequency:
        'Frequency',

    __static__field__number__read__BillingAmt:
        'BillingAmt',

    __static__field__string__read__Status:
        'Status',

    __static__field__string__read__ReasonStopped:
        'ReasonStopped',

    __static__field__number__read__AutoCharge:
        'AutoCharge',

    __static__field__number__read__CC1:
        'CC1',

    __static__field__number__read__CC2:
        'CC2',

    __static__field__number__read__NumDaysBetweenRetry:
        'NumDaysBetweenRetry',

    __static__field__number__read__MaxRetry:
        'MaxRetry',

    __static__field__number__read__MerchantAccountId:
        'MerchantAccountId',

    __static__field__number__read__AffiliateId:
        'AffiliateId',

    __static__field__string__read__PromoCode:
        'PromoCode',

    __static__field__number__read__LeadAffiliateId:
        'LeadAffiliateId',

    __static__field__number__read__Qty:
        'Qty',

    __static__field__string__read__City:
        'City',

    __static__field__string__read__Email:
        'Email',

    __static__field__string__read__EmailAddress2:
        'EmailAddress2',

    __static__field__string__read__EmailAddress3:
        'EmailAddress3',

    __static__field__string__read__FirstName:
        'FirstName',

    __static__field__string__read__HTMLSignature:
        'HTMLSignature',

    __static__field__string__read__LastName:
        'LastName',

    __static__field__string__read__MiddleName:
        'MiddleName',

    __static__field__string__read__Nickname:
        'Nickname',

    __static__field__string__read__Phone1:
        'Phone1',

    __static__field__string__read__Phone1Ext:
        'Phone1Ext',

    __static__field__string__read__Phone1Type:
        'Phone1Type',

    __static__field__string__read__Phone2:
        'Phone2',

    __static__field__string__read__Phone2Ext:
        'Phone2Ext',

    __static__field__string__read__Phone2Type:
        'Phone2Type',

    __static__field__string__read__PostalCode:
        'PostalCode',

    __static__field__string__read__Signature:
        'Signature',

    __static__field__string__read__SpouseName:
        'SpouseName',

    __static__field__string__read__State:
        'State',

    __static__field__string__read__Country:
        'Country',

    __static__field__string__read__StreetAddress1:
        'StreetAddress1',

    __static__field__string__read__StreetAddress2:
        'StreetAddress2',

    __static__field__string__read__Suffix:
        'Suffix',

    __static__field__string__read__Title:
        'Title',

    __static__field__string__read__ZipFour1:
        'ZipFour1'

});